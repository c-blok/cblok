$small: 900px;

$bg: #FFF;
$gray: #2E3133;
$gray2: #4F4F4F;
$active: #B3B3B3;
$neutral: #3F4F4C;
$blockColor: #43625D;
$headerColor: #2E3133;

$headerHeight: 106px;
$headerSmall: 75px;

$transitionTime: 0.5s;


@mixin maxWrapper() {
  max-width: 1700px;
  margin: auto;
}
@mixin wrapper() {
  padding: 0 30px;
}

@mixin paddingTopMarginBottom() {
  padding-top: $headerHeight;
  margin-bottom: -$headerHeight;

  @media screen and (max-width: $small + 100) {
    padding-top: $headerSmall;
    margin-bottom: -$headerSmall;
  }
}

@mixin fullHeight($minus: 0px) {
  height: calc(100dvh - #{$headerHeight} - #{$minus});

  @media screen and (max-width: $small + 100) {
    height: calc(100dvh - #{$headerSmall} - #{$minus});
  }
}

@mixin h2() {
  font-size: 2.3em;
  @media screen and (max-width: $small + 100) {
    font-size: 1.4em;
  }
}

@mixin h3() {
  font-size: 1.5em;
  @media screen and (max-width: $small + 100) {
    font-size: 1em;
  }
}
@mixin text() {
  font-size: 1.1em;
  @media screen and (max-width: $small + 100) {
    font-size: 0.7em;
  }
}

.button {
  @include text();
  height: fit-content;
  display: flex;
  align-items: center;
  gap: 16px;
  padding: 16px 40px;
  border-radius: 4px;
  border: 2px solid $bg;
  font-style: normal;
  font-weight: 500;
  line-height: normal;
  color: $bg;
  white-space: nowrap;
  transition: border-color $transitionTime, color $transitionTime, background-color $transitionTime;

  @media screen and (max-width: $small) {
    padding: 12px 24px;
    svg {
      width: 20px;
      height: 20px;
    }
  }

  svg {
    path {
      transition: stroke $transitionTime;
    }
  }

  &:hover, &:disabled {
    cursor: pointer;
    border-color: $active;
    color: $active;
    svg {
      path {
        stroke: $active;
      }
    }
  }

  &.loading {
    position: relative;
    overflow: hidden;
    transition: rotate 2s;

    svg {
      animation: loading 1.5s ease-in-out infinite;
    }
    @keyframes loading {
      from {
        transform: translateX(0) rotate(45deg);
      }
      to {
        transform: translate(110%) rotate(45deg);
      }
    }

    //&:after {
    //  overflow: hidden;
    //  position: absolute;
    //  bottom: -1px;
    //  content: "";
    //  width: 100%;
    //  height: 2px;
    //  background-color: $bg;
    //  animation: loading 2s ease-in-out infinite;
    //
    //
    //  @keyframes loading {
    //    0% {
    //      left: -100%;
    //    }
    //    25% {
    //      left: 0;
    //    }
    //    50% {
    //      left: 100%;
    //    }
    //    75% {
    //      left: 100%;
    //    }
    //    100% {
    //      left: -100%;
    //    }
    //  }
    //}
  }
  &:disabled {
    cursor: not-allowed;
  }
  &.success, &:hover &.success {
    background-color: $active;
    border-color: $blockColor;
    color: $blockColor;
    svg {
      path {
        stroke: $blockColor;
      }
    }
  }
}
